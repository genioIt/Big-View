@page "/login"
@using BlazorUserManagement.Models
@using BlazorUserManagement.Services
@inject AuthService AuthService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<PageTitle>Iniciar Sesión - La Tienda de Don Juan</PageTitle>

<div class="min-h-screen bg-gradient-to-br from-indigo-50 to-blue-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <!-- Header -->
        <div class="text-center">
            <div class="mx-auto h-20 w-20 bg-indigo-600 rounded-full flex items-center justify-center mb-4">
                <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
            </div>
            <h2 class="text-3xl font-bold text-gray-900">Iniciar Sesión</h2>
            <p class="mt-2 text-sm text-gray-600">
                Accede a tu cuenta en La Tienda de Don Juan
            </p>
        </div>

        <!-- Formulario -->
        <div class="bg-white rounded-lg shadow-xl p-8">
            <EditForm Model="@loginRequest" OnValidSubmit="@HandleLogin">
                <DataAnnotationsValidator />
                
                <div class="space-y-6">
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
                            Correo Electrónico
                        </label>
                        <InputText id="email" @bind-Value="loginRequest.Email" type="email"
                                   class="w-full px-3 py-3 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" 
                                   placeholder="tu@email.com" />
                        <ValidationMessage For="@(() => loginRequest.Email)" class="text-red-500 text-sm mt-1" />
                    </div>

                    <div>
                        <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
                            Contraseña
                        </label>
                        <InputText id="password" @bind-Value="loginRequest.Password" type="password"
                                   class="w-full px-3 py-3 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" 
                                   placeholder="Tu contraseña" />
                        <ValidationMessage For="@(() => loginRequest.Password)" class="text-red-500 text-sm mt-1" />
                    </div>

                    <div>
                        <button type="submit" disabled="@isLoading"
                                class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
                            @if (isLoading)
                            {
                                <span class="flex items-center">
                                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                    </svg>
                                    Iniciando sesión...
                                </span>
                            }
                            else
                            {
                                <span>Iniciar Sesión</span>
                            }
                        </button>
                    </div>
                </div>
            </EditForm>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="mt-4 p-4 rounded-md @(isSuccess ? "bg-green-50 text-green-800 border border-green-200" : "bg-red-50 text-red-800 border border-red-200")">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            @if (isSuccess)
                            {
                                <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                                </svg>
                            }
                            else
                            {
                                <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                </svg>
                            }
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium">@message</p>
                        </div>
                    </div>
                </div>
            }

            <!-- Enlaces adicionales -->
            <div class="mt-6 text-center">
                <p class="text-sm text-gray-600">
                    ¿No tienes una cuenta?
                    <a href="/register" class="font-medium text-indigo-600 hover:text-indigo-500 ml-1">
                        Regístrate aquí
                    </a>
                </p>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new LoginRequest();
    private bool isLoading = false;
    private string message = string.Empty;
    private bool isSuccess = false;

    private async Task HandleLogin()
    {
        isLoading = true;
        message = string.Empty;
        StateHasChanged();

        try
        {
            var response = await AuthService.LoginAsync(loginRequest);
            
            if (response.Success)
            {
                message = "¡Inicio de sesión exitoso! Redirigiendo...";
                isSuccess = true;
                StateHasChanged();
                
                // Aquí puedes guardar el token en localStorage o sessionStorage
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", response.Token);
                
                // Redirigir después de un breve delay
                await Task.Delay(1500);
                Navigation.NavigateTo("/");
            }
            else
            {
                message = response.Message;
                isSuccess = false;
            }
        }
        catch (Exception ex)
        {
            message = $"Error inesperado: {ex.Message}";
            isSuccess = false;
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}